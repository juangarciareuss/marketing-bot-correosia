# strategist.py (V11.0 - El Director)
import os
import json
import google.generativeai as genai
from dotenv import load_dotenv
from researcher import buscar_tendencias

def configurar_api():
    load_dotenv()
    api_key = os.getenv("GOOGLE_API_KEY")
    if not api_key: raise ValueError("No se encontr√≥ la GOOGLE_API_KEY")
    genai.configure(api_key=api_key)

PROMPT_ESTRATEGA = """
Act√∫a como un Director de Estrategia de Contenidos de clase mundial.
Tu tarea es tomar la siguiente investigaci√≥n de mercado y convertirla en un plan de temas de conversaci√≥n para una semana.

**INVESTIGACI√ìN DE MERCADO:**
---
{investigacion_de_mercado}
---

**REGLAS:**
1.  Analiza la investigaci√≥n e identifica 3-4 conceptos clave.
2.  Crea un Plan Semanal de 5 d√≠as.
3.  Asigna un Pilar de Contenido a cada d√≠a: "Consejo de Productividad", "Tip de Redacci√≥n", "Error a Evitar", "Frase Ganadora", "Caso de Uso".
4.  Para cada d√≠a, escribe una **"directriz"**: un tema de conversaci√≥n o un √°ngulo de alto nivel. NO escribas el tuit final.
   - Ejemplo de directriz BUENA: "Hablar sobre la importancia de la hiper-personalizaci√≥n en el email, m√°s all√° de solo usar el nombre del cliente."
   - Ejemplo de directriz MALA: "Escribir un tuit sobre la hiper-personalizaci√≥n."
5.  RESPONDE SIEMPRE EN FORMATO JSON V√ÅLIDO.

Crea el plan de contenido.
"""

def crear_estrategia(investigacion: str):
    print("üß† Creando estrategia de contenido con el modelo Pro...")
    try:
        model = genai.GenerativeModel('gemini-1.5-pro-latest')
        prompt_final = PROMPT_ESTRATEGA.format(investigacion_de_mercado=investigacion)
        response = model.generate_content(prompt_final)
        cleaned_response = response.text.strip().replace("```json", "").replace("```", "")
        estrategia_json = json.loads(cleaned_response)
        print("‚úÖ ¬°Estrategia creada con √©xito!")
        return estrategia_json
    except Exception as e:
        print(f"‚ùå Error al crear la estrategia: {e}")
        return None

if __name__ == "__main__":
    try:
        configurar_api()
        tema = "consejos de escritura de correos electr√≥nicos persuasivos y profesionales 2025"
        investigacion = buscar_tendencias(tema)
        if investigacion:
            estrategia = crear_estrategia(investigacion)
            if estrategia:
                with open("strategy.json", "w", encoding="utf-8") as f:
                    json.dump(estrategia, f, ensure_ascii=False, indent=2)
                print("üíæ Estrategia guardada con √©xito en 'strategy.json'")
                print("\nContenido del plan:")
                print(json.dumps(estrategia, indent=2, ensure_ascii=False))
    except ValueError as e:
        print(f"ERROR DE CONFIGURACI√ìN: {e}")